//GfacStabilityAnalysisScriipt20181009.bsh

import org.jfree.data.xy.XYSeries;
import ij.measure.ResultsTable;
import ij.io.DirectoryChooser;
gui.refreshGUI(); 
gui.refreshGUIFromCache(); 
gui.closeAllAcquisitions(); 
gui.clearMessageWindow(); 

//-------------------Acquisition---------------------//
DirectoryChooser dr = new DirectoryChooser("Choose the directory"); 
dr.setDefaultDirectory("D:\temp"); 
acqDir = dr.getDirectory(); 

print("image:"+ acqDir);	//print acquisition directory 

int[] GainList = { 5};//, 3, 2, 4, 1, 5}; // Gain List 
nG = GainList.length; 
int[] ExpList = { 2000, 1500, 1000, 800, 600, 400, 200, 100, 50 }; 
nE = ExpList.length; 
nCh = 2; // # of cameras 
nZ = nPos = 0; // # of Z and xy positions 
z = pos = 0; 


for( g = 0; g < nG; g++ ){	// loop for varying Gain 
	deviceName = "Dcam1"; // camera name 
   propertyName = "Gain"; // property to be changed 
	newValue = String.valueOf(GainList[g]); // load list of gain 
	mmc.setProperty(deviceName, propertyName, newValue);// Set the above mentioned properties 

	deviceName = "DCam2"; // camera name 
	propertyName = "Gain"; // property to be changed 
	newValue = String.valueOf(GainList[g]); // load list of gain 
	mmc.setProperty(deviceName, propertyName, newValue);// Set the above mentioned properties 
                
	acqName = gui.getUniqueAcquisitionName("EMGain "+ GainList[g]); //set folder name 
	gui.openAcquisition(acqName, acqDir, nE, nCh, nZ, true, true);	
                        
	for( e = 0; e < nE; e++ ){	// loop for varying exposures  
		mmc.setExposure(ExpList[e]); //set exposure from exposure list 
     	gui.refreshGUI(); 
		mmc.snapImage();
		 
		for (int ch = 0; ch < nCh; ch++){ // loop for multicam image 
			im = mmc.getTaggedImage(ch); 
			gui.addImageToAcquisition(acqName, e, ch, z, pos, im); 
         } 
      mmc.sleep(50);//rest(ms) before next image
      } 
}
/*-------------Analysis and Plotting--------------*/
img = ij.IJ.getImage();
ij.ImageStack stack = img.getImageStack();
ij.plugin.ImageCalculator calc = new ij.plugin.ImageCalculator();
XYSeries data = new XYSeries("");
ResultsTable rt = new ResultsTable();
rt.reset();

for (int i=0; i <stack.getSize()/2; i++) {
	ip = stack.getProcessor(2*i + 1);
	ip2 = stack.getProcessor(2*i + 2);
	ij.process.ImageStatistics stats = ip.getStatistics();
	ipDiff = calc.run("Divide create 32-bit", new ij.ImagePlus("1", ip), new ij.ImagePlus("2",ip2) );
	ij.process.ImageStatistics statsDiff = ipDiff.getStatistics();
	stdDev = statsDiff.stdDev;
	rt.incrementCounter();
	
	gui.message("Processing: " + i);
	data.add(i, statsDiff.mean);
}

t = "2Cam Ratio" + img.getTitle();
rt.show(t);
plotData("2Cam Ratio -" + img.getTitle(), data, "Frame #", "Ratio", 100, 100, true, true);
